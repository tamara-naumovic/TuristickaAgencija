/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme.klijent;

import Kontroler.Kontroler;
import domen.Agent;
import domen.Aranzman;
import domen.Klijent;
import domen.Mesto;
import domen.Rezervacija;
import java.awt.Color;
import java.awt.Window;
import java.io.IOException;
import java.net.SocketException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.control.DatePicker;
import javax.swing.BorderFactory;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableColumn;
import komunikacija.Komunikacija;
import konstante.Konstante;
import model.DodajKlijentaTableModel;
import sesija.Sesija;
import transfer.KlijentTransfer;
import transfer.ServerTransfer;

/**
 *
 * @author Tami
 */
public class DodajKlijentaPanel extends javax.swing.JPanel {

    Klijent klijent;
    /**
     * Creates new form DodajKlijentaPanel
     */
    public DodajKlijentaPanel() {
        initComponents();
        srediComboBox();
        srediTabelu();
        postaviKlijentID();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbtnUnosExit = new javax.swing.JButton();
        jtxtUnosEmail = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtxtUnosKlijentID = new javax.swing.JTextField();
        jtxtUnosTelefon = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jbtnUnosObrisiRezervaciju = new javax.swing.JButton();
        jcmbUnosMesto = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jbtnUnosDodajKlijenta = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblRezervacije = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jtxtUnosIme = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jbtnDodajRezervaciju = new javax.swing.JButton();
        jbtnSacuvajRezervacije = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jtxtPrezime = new javax.swing.JTextField();

        jbtnUnosExit.setText("Zatvori");
        jbtnUnosExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnUnosExitActionPerformed(evt);
            }
        });

        jtxtUnosEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtUnosEmailActionPerformed(evt);
            }
        });

        jLabel6.setText("KlijentID");

        jLabel3.setText("Broj telefona");

        jtxtUnosKlijentID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtUnosKlijentIDActionPerformed(evt);
            }
        });

        jLabel4.setText("Mesto");

        jbtnUnosObrisiRezervaciju.setText("Obrisi rezervaciju");
        jbtnUnosObrisiRezervaciju.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnUnosObrisiRezervacijuActionPerformed(evt);
            }
        });

        jcmbUnosMesto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel7.setText("Rezervacije");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Unos novog klijenta");

        jbtnUnosDodajKlijenta.setText("Dodaj klijenta");
        jbtnUnosDodajKlijenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnUnosDodajKlijentaActionPerformed(evt);
            }
        });

        jtblRezervacije.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtblRezervacije);

        jLabel1.setText("Ime ");

        jLabel2.setText("E-mail adresa");

        jbtnDodajRezervaciju.setText("Dodaj rezervaciju");
        jbtnDodajRezervaciju.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDodajRezervacijuActionPerformed(evt);
            }
        });

        jbtnSacuvajRezervacije.setText("Sacuvaj rezervacije");
        jbtnSacuvajRezervacije.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSacuvajRezervacijeActionPerformed(evt);
            }
        });

        jLabel8.setText("Prezime");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSeparator1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbtnDodajRezervaciju)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbtnUnosObrisiRezervaciju))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbtnUnosDodajKlijenta)
                        .addGap(42, 42, 42)
                        .addComponent(jbtnSacuvajRezervacije)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                        .addComponent(jbtnUnosExit, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcmbUnosMesto, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jtxtUnosTelefon)
                            .addComponent(jtxtUnosEmail)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtxtUnosIme)
                            .addComponent(jtxtUnosKlijentID)
                            .addComponent(jtxtPrezime))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jtxtUnosKlijentID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtxtUnosIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jtxtPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtxtUnosEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtxtUnosTelefon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jcmbUnosMesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jbtnDodajRezervaciju)
                    .addComponent(jbtnUnosObrisiRezervaciju))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnUnosDodajKlijenta)
                    .addComponent(jbtnUnosExit)
                    .addComponent(jbtnSacuvajRezervacije))
                .addGap(20, 20, 20))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnUnosExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnUnosExitActionPerformed
        Window w = SwingUtilities.getWindowAncestor(this);
        w.setVisible(false);
        
    }//GEN-LAST:event_jbtnUnosExitActionPerformed

    
    private void jtxtUnosEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtUnosEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtUnosEmailActionPerformed

    private void jtxtUnosKlijentIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtUnosKlijentIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtUnosKlijentIDActionPerformed

    private void jbtnUnosDodajKlijentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnUnosDodajKlijentaActionPerformed
        if (!validirajFormu()) {
            JOptionPane.showMessageDialog(this, "Klijenta nije moguce sacuvati!");
            return;
        }
        String id = jtxtUnosKlijentID.getText().trim();
        String Ime= jtxtUnosIme.getText().trim();
        String prezime= jtxtPrezime.getText().trim();
        String email = jtxtUnosEmail.getText().trim();
        String kontakt =jtxtUnosTelefon.getText();
        Mesto m = (Mesto) jcmbUnosMesto.getSelectedItem();
        klijent = new Klijent(Integer.parseInt(id), prezime,Ime, email, kontakt, m);
        
        
        try {
            
            if (Kontroler.getInstance().kreirajKlijenta(klijent)==true) {
                if (klijent.getListarezervacija().isEmpty()) {
                    Object[] opcije = {"Da", "Ne"};
                    String poruka = "Klijent sacuvan. Zelite li da kreirate rezervaciju?";
                    int izbor = JOptionPane.showOptionDialog(this, poruka, "Novi klijent", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, opcije, opcije[0]);
                    if (izbor == 0) {
                        jbtnUnosDodajKlijenta.setEnabled(false);
                        DodajKlijentaTableModel dktm = (DodajKlijentaTableModel) jtblRezervacije.getModel();
                        dktm.setK(klijent);
                        dktm.fireTableDataChanged();
                        disableDodajKlijentFormu();
                        jbtnDodajRezervaciju.setEnabled(true);
                        jbtnUnosObrisiRezervaciju.setEnabled(true);
                        return;
                    }
                        Window w = SwingUtilities.getWindowAncestor(this);
                        w.setVisible(false);
                }else{
                    JOptionPane.showMessageDialog(this, "Nesto nije kul!");
                    Window w = SwingUtilities.getWindowAncestor(this);
                    w.setVisible(false);
                }
                
            }
        } catch (Exception ex) {
            Logger.getLogger(DodajKlijentaPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }//GEN-LAST:event_jbtnUnosDodajKlijentaActionPerformed

    private void jbtnDodajRezervacijuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDodajRezervacijuActionPerformed
            Rezervacija rez = new Rezervacija();
            klijent.dodajRezervaciju(rez);
            Agent ag = (Agent)Sesija.vratiInstancu().getMapa().get("agent");
            rez.setAgent(ag);
            rez.setKlijent(klijent);
            Aranzman ar = new Aranzman();
            rez.setAranzaman(ar);
            
            DodajKlijentaTableModel dktm = (DodajKlijentaTableModel) jtblRezervacije.getModel();
            dktm.getListaRezervacija().add(rez);
            dktm.fireTableDataChanged();
        
    }//GEN-LAST:event_jbtnDodajRezervacijuActionPerformed

    private void jbtnSacuvajRezervacijeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSacuvajRezervacijeActionPerformed
        DodajKlijentaTableModel dktm = (DodajKlijentaTableModel) jtblRezervacije.getModel();
        
        if (dktm.getListaRezervacija().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Morate imati bar jednu rezervaciju", "Greska", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        int uspeh=0;
        System.out.println("Rezervacije u tabeli "+dktm.getListaRezervacija().size());
        for (Rezervacija rez : dktm.getListaRezervacija()) {
            try {
                rez.setRezervacijaID(dktm.getK().getKlijentID()*10+dktm.getListaRezervacija().indexOf(rez));
                
                if (Kontroler.getInstance().kreirajRezervaciju(rez)==true) {
                    uspeh++;
                }
            } catch (Exception ex) {
                Logger.getLogger(DodajKlijentaPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        System.out.println(uspeh+"");
        if (uspeh==dktm.getListaRezervacija().size()) {
            JOptionPane.showMessageDialog(this, "Uspesno sacuvano "+uspeh+" rezervacija");
            Window w = SwingUtilities.getWindowAncestor(this);
                    w.setVisible(false);
        }else{
            JOptionPane.showMessageDialog(this, "Doslo je do greske");
        }

    }//GEN-LAST:event_jbtnSacuvajRezervacijeActionPerformed

    private void jbtnUnosObrisiRezervacijuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnUnosObrisiRezervacijuActionPerformed
        int red = jtblRezervacije.getSelectedRow();
        if (red >= 0) {
            klijent.obrisiRezervaciju(red);
            
            DodajKlijentaTableModel model = (DodajKlijentaTableModel) jtblRezervacije.getModel();
            model.fireTableDataChanged();
        } else {
            JOptionPane.showMessageDialog(this, "Morate odabrati rezervaciju!");
            return;
        }
    }//GEN-LAST:event_jbtnUnosObrisiRezervacijuActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton jbtnDodajRezervaciju;
    private javax.swing.JButton jbtnSacuvajRezervacije;
    private javax.swing.JButton jbtnUnosDodajKlijenta;
    private javax.swing.JButton jbtnUnosExit;
    private javax.swing.JButton jbtnUnosObrisiRezervaciju;
    private javax.swing.JComboBox jcmbUnosMesto;
    private javax.swing.JTable jtblRezervacije;
    private javax.swing.JTextField jtxtPrezime;
    private javax.swing.JTextField jtxtUnosEmail;
    private javax.swing.JTextField jtxtUnosIme;
    private javax.swing.JTextField jtxtUnosKlijentID;
    private javax.swing.JTextField jtxtUnosTelefon;
    // End of variables declaration//GEN-END:variables

    private void srediComboBox() {
        try {
            jcmbUnosMesto.removeAllItems();
            KlijentTransfer kt = new KlijentTransfer();
            kt.setOperacija(Konstante.VRATI_MESTA);
            Komunikacija.getInstance().sendRequest(kt);
            ServerTransfer st = Komunikacija.getInstance().readResponse();
            List<Mesto> mesta = (List<Mesto>) st.getPodaci();
            
            for (Mesto m : mesta) {
                jcmbUnosMesto.addItem(m);
            }
            jcmbUnosMesto.setSelectedIndex(-1);
        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(DodajKlijentaPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void srediTabelu() {
        try {
            jbtnDodajRezervaciju.setEnabled(false);
            jbtnUnosObrisiRezervaciju.setEnabled(false);
            
            DodajKlijentaTableModel dktm = new DodajKlijentaTableModel();
            jtblRezervacije.setModel(dktm);
            
            KlijentTransfer kt = new KlijentTransfer();
            kt.setOperacija(Konstante.VRATI_ARANZMANE);
            Komunikacija.getInstance().sendRequest(kt);
            ServerTransfer st = Komunikacija.getInstance().readResponse();
            
            List<Aranzman> listaAranzmana = (List<Aranzman>) st.getPodaci();
            JComboBox jcbAranzman = new JComboBox(listaAranzmana.toArray());
            TableColumn tcUsluga = jtblRezervacije.getColumnModel().getColumn(0);
            tcUsluga.setCellEditor(new DefaultCellEditor(jcbAranzman));
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(DodajKlijentaPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(DodajKlijentaPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private List<Rezervacija> vratiRezervacije() {
        List <Rezervacija> listrez = new LinkedList<>();
        try {
            
             listrez= Kontroler.getInstance().getSveRezervacije();
            
        } catch (Exception ex) {
            Logger.getLogger(DodajKlijentaPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
        return listrez;
    }
    private void postaviKlijentID(){
        try {
            
            List<Klijent> listklijent = Kontroler.getInstance().getKlijente();
            int klijentid = listklijent.get(listklijent.size()-1).getKlijentID()+1;
            jtxtUnosKlijentID.setText(klijentid+"");
            jtxtUnosKlijentID.setEditable(false);
        } catch (Exception ex) {
            Logger.getLogger(DodajKlijentaPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void disableDodajKlijentFormu() {
        jtxtPrezime.setEnabled(false);
        jtxtUnosEmail.setEnabled(false);
        jtxtUnosIme.setEnabled(false);
        jtxtUnosKlijentID.setEnabled(false);
        jtxtUnosTelefon.setEnabled(false);
    }

    private boolean validirajFormu() {
        List<JTextField> textFields = new LinkedList<>();
        boolean valid = true;
        
        textFields.add(jtxtPrezime);
        textFields.add(jtxtUnosEmail);
        textFields.add(jtxtUnosIme);
        textFields.add(jtxtUnosTelefon);
        for (JTextField field : textFields) {
            if (field.getText().isEmpty()) {
                valid=false;
                field.setBorder(BorderFactory.createLineBorder(Color.RED));
            }
        }
        if (jcmbUnosMesto.getSelectedIndex()==-1) {
            valid=false;
            jcmbUnosMesto.setBorder(BorderFactory.createLineBorder(Color.RED));
        }
        return valid;
    }
}
