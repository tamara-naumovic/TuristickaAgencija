/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme.aranzman;

import Kontroler.Kontroler;
import domen.Aranzman;
import domen.PoslovniPartner;
import domen.StavkaAranzmana;
import forme.klijent.KlijentForma;
import java.awt.Color;
import java.awt.Window;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import model.StavkeAranzmanaTableModel;

/**
 *
 * @author Tami
 */
public class DodajAranzmanPanel extends javax.swing.JPanel {
    private static final SimpleDateFormat SDF = new SimpleDateFormat("dd-mm-yyyy");
    PoslovniPartner pp;
    Aranzman ar;
    /**
     * Creates new form DodajAranzmanPanel
     */
    public DodajAranzmanPanel(PoslovniPartner pp) {
        this.pp=pp;
        
        initComponents();
        srediFormu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtxtAranzmanID = new javax.swing.JTextField();
        jbtnDodajStavku = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jbtnObrisiStavku = new javax.swing.JButton();
        jtxtAranzmanCena = new javax.swing.JTextField();
        jtxtDatumOd = new javax.swing.JTextField();
        jbtnSacuvajAranzman = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jbtnOtkaziAranzman = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jtxtDatumdo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jtxtDestinacija = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtblStavkeAranzmana = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jtxtNaziv = new javax.swing.JTextField();

        jbtnDodajStavku.setText("Dodaj");
        jbtnDodajStavku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDodajStavkuActionPerformed(evt);
            }
        });

        jLabel2.setText("Cena");

        jbtnObrisiStavku.setText("Obrisi");
        jbtnObrisiStavku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnObrisiStavkuActionPerformed(evt);
            }
        });

        jbtnSacuvajAranzman.setText("Sacuvaj");
        jbtnSacuvajAranzman.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSacuvajAranzmanActionPerformed(evt);
            }
        });

        jLabel3.setText("Datum od");

        jbtnOtkaziAranzman.setText("Otkazi");
        jbtnOtkaziAranzman.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnOtkaziAranzmanActionPerformed(evt);
            }
        });

        jLabel4.setText("Datum do");

        jtxtDatumdo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtxtDatumdoActionPerformed(evt);
            }
        });

        jLabel5.setText("Destinacija");

        jtblStavkeAranzmana.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtblStavkeAranzmana);

        jLabel1.setText("Aranzman ID");

        jLabel6.setText("Naziv");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(77, 77, 77)
                                .addComponent(jbtnSacuvajAranzman)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jbtnOtkaziAranzman))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jbtnDodajStavku)
                                    .addComponent(jbtnObrisiStavku)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(jtxtDestinacija))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jtxtDatumOd)
                                    .addComponent(jtxtAranzmanCena)
                                    .addComponent(jtxtDatumdo)
                                    .addComponent(jtxtAranzmanID, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jtxtNaziv)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtxtAranzmanID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtxtAranzmanCena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtDatumOd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtDatumdo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtDestinacija, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jbtnDodajStavku)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbtnObrisiStavku)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnSacuvajAranzman)
                    .addComponent(jbtnOtkaziAranzman))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jtxtDatumdoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtxtDatumdoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtxtDatumdoActionPerformed

    private void jbtnDodajStavkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDodajStavkuActionPerformed
        StavkaAranzmana nova = new StavkaAranzmana();
        
        ar.dodajStavku(nova);
        nova.setAranzman(ar);
        
        StavkeAranzmanaTableModel atm = (StavkeAranzmanaTableModel) jtblStavkeAranzmana.getModel();
        
        atm.fireTableDataChanged();
        
        
    }//GEN-LAST:event_jbtnDodajStavkuActionPerformed

    private void jbtnObrisiStavkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnObrisiStavkuActionPerformed
        int red = jtblStavkeAranzmana.getSelectedRow();
        if (red >= 0) {
            ar.getListaStavki().remove(red);
            
            StavkeAranzmanaTableModel model = (StavkeAranzmanaTableModel) jtblStavkeAranzmana.getModel();
            model.fireTableDataChanged();
        } else {
            JOptionPane.showMessageDialog(this, "Morate odabrati stavku!");
            
        }
    }//GEN-LAST:event_jbtnObrisiStavkuActionPerformed

    private void jbtnSacuvajAranzmanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSacuvajAranzmanActionPerformed
        if (!validirajPolja()) {
            JOptionPane.showMessageDialog(this, "Nije moguce kreirati aranzman");
            return;
        }
        try {
            String resenje="";
            Double cena = Double.parseDouble(jtxtAranzmanCena.getText());
            
            Date datumod = SDF.parse(jtxtDatumOd.getText());
            Date datumdo = SDF.parse(jtxtDatumdo.getText());
            if (datumod.before(new Date())) {
                JOptionPane.showMessageDialog(this, "Datum mora biti posle danasnjeg");
                return;
            }
            if (datumdo.before(new Date())) {
                JOptionPane.showMessageDialog(this, "Datum mora biti posle danasnjeg");
                return;

            }
            
            String destinacija = jtxtDestinacija.getText();
            String naziv = jtxtNaziv.getText();
            ar.setCena(cena);
            ar.setDatumPolaska(new java.sql.Date((datumod.getTime())));
            ar.setDatumPovratka(new java.sql.Date((datumdo.getTime())));
            ar.setDestinacija(destinacija);
            ar.setNaziv(naziv);
            
            StavkeAranzmanaTableModel atm = (StavkeAranzmanaTableModel) jtblStavkeAranzmana.getModel();
            if (atm.getAraz().getListaStavki().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Morate uneti barem jednu stavku!");
                return;
            }
            try {
            
            if (Kontroler.getInstance().kreirajAranzman(ar)==true) {
                resenje+=ar.getAranzmanID()+" je kreiran.";
            }
            } catch (Exception ex) {
                Logger.getLogger(DodajAranzmanPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            for (StavkaAranzmana sta: atm.getAraz().getListaStavki()) {
                try {
                sta.setRbStavke(ar.getAranzmanID()*10+atm.getAraz().getListaStavki().indexOf(sta));
                if (Kontroler.getInstance().kreirajStavkuAranzmana(sta)==true) {
                    resenje+=sta.getNaziv()+" dodata ";
                    JOptionPane.showMessageDialog(this, resenje);
                }
                } catch (Exception ex) {
                    Logger.getLogger(DodajAranzmanPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
            
            Window w = SwingUtilities.getWindowAncestor(this);
            w.setVisible(false);
             
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, "Nije u dobrom formatu");
            
        }
        
    }//GEN-LAST:event_jbtnSacuvajAranzmanActionPerformed

    private void jbtnOtkaziAranzmanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnOtkaziAranzmanActionPerformed
        Window w = SwingUtilities.getWindowAncestor(this);
            w.setVisible(false);
    }//GEN-LAST:event_jbtnOtkaziAranzmanActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtnDodajStavku;
    private javax.swing.JButton jbtnObrisiStavku;
    private javax.swing.JButton jbtnOtkaziAranzman;
    private javax.swing.JButton jbtnSacuvajAranzman;
    private javax.swing.JTable jtblStavkeAranzmana;
    private javax.swing.JTextField jtxtAranzmanCena;
    private javax.swing.JTextField jtxtAranzmanID;
    private javax.swing.JTextField jtxtDatumOd;
    private javax.swing.JTextField jtxtDatumdo;
    private javax.swing.JTextField jtxtDestinacija;
    private javax.swing.JTextField jtxtNaziv;
    // End of variables declaration//GEN-END:variables

    private void srediFormu() {
        ar = new Aranzman();
        ar.setListaStavki(new LinkedList<>());
        StavkeAranzmanaTableModel atm = new StavkeAranzmanaTableModel();
        atm.setAraz(ar);
        jtblStavkeAranzmana.setModel(atm);
        jtxtAranzmanID.setEditable(false);
        ar.setAranzmanID(vratiAranzmane().size()+1);
        ar.setPoslovniPartner(pp);
        jtxtAranzmanID.setText(ar.getAranzmanID().toString());
        
        
    }
    private List<Aranzman> vratiAranzmane(){
        List<Aranzman> arlista = new LinkedList<>();
        try {
            arlista = Kontroler.getInstance().getAranzmane();
            
        } catch (Exception ex) {
            Logger.getLogger(KlijentForma.class.getName()).log(Level.SEVERE, null, ex);
        }
        return arlista;
    }
    
    private List<StavkaAranzmana> vratiStavke(){
        List<StavkaAranzmana> lista=  new LinkedList<>();
        try {
            lista = Kontroler.getInstance().getSveStavke();
            
        } catch (Exception ex) {
            Logger.getLogger(KlijentForma.class.getName()).log(Level.SEVERE, null, ex);
        }return lista;
    }

    private boolean validirajPolja() {
        vratiIviceForme();
        List<JTextField> fields = new LinkedList<>();
        fields.add(jtxtNaziv);
        fields.add(jtxtAranzmanCena);
        fields.add(jtxtDatumOd);
        fields.add(jtxtDatumdo);
        fields.add(jtxtDestinacija);
        boolean valid = true;
        for (JTextField field : fields) {
            if (field.getText().isEmpty()) {
                valid = false;
                field.setBorder(BorderFactory.createLineBorder(Color.RED));
            }
        }
        return valid;
    }

    private void vratiIviceForme() {
        List<JTextField> fields = new LinkedList<>();
        fields.add(jtxtNaziv);
        fields.add(jtxtAranzmanCena);
        fields.add(jtxtDatumOd);
        fields.add(jtxtDatumdo);
        fields.add(jtxtDestinacija);
        for (JTextField field : fields) {
                
                field.setBorder(BorderFactory.createLineBorder(Color.GRAY));
            
        }
    }
}
