/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme.partner;

import Kontroler.GUIKontroler;
import Kontroler.Kontroler;
import com.sun.corba.se.impl.activation.ServerTableEntry;
import domen.Agent;
import domen.Aranzman;
import domen.Klijent;
import domen.Mesto;
import domen.PoslovniPartner;
import domen.Rezervacija;
import forme.GlavnaForma;
import forme.aranzman.AranzmanFrm;
import forme.aranzman.DodajAranzmanPanel;
import forme.klijent.DodajKlijentaPanel;
import forme.klijent.KlijentForma;
import forme.login.LoginForma;
import java.awt.BorderLayout;
import java.io.IOException;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import komunikacija.Komunikacija;
import konstante.Konstante;
import model.KlijentiTableModel;
import model.PartnerTableModel;
import sesija.Sesija;
import transfer.KlijentTransfer;
import transfer.ServerTransfer;

/**
 *
 * @author Tami
 */
public class PartnerFrm extends javax.swing.JFrame {
    PoslovniPartner pp;
    /**
     * Creates new form PartnerFrm
     */
    public PartnerFrm() {
        initComponents();
        srediFormu();
        this.setTitle("Poslovni partneri");
        jmiPoslovniPartner.getComponent().setEnabled(false);
        jmiOdjaviAgenta.getComponent().setEnabled(false);
        jmiAgent.getComponent().setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtblPoslovniPartneri = new javax.swing.JTable();
        jbtnIzmeniPartnera = new javax.swing.JButton();
        jbtnObrisiPartnera = new javax.swing.JButton();
        jbtnDodajPartnera = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jtxtIzmenaPartnerID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jtxtIzmenaPIB = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtxtIzmenaMaticni = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jtxtIzmenaNaziv = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jtxtIzmenaTip = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jcmbIzmenaPartnerMesto = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jtxtIzmenaUlica = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jtxtIzmenaAdresaBroj = new javax.swing.JTextField();
        jbtnSacuvajIzmene = new javax.swing.JButton();
        jtxtPretragaNaziv = new javax.swing.JTextField();
        jtxtPretragaTip = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jbtnNadjiPartnere = new javax.swing.JButton();
        jbtnPrikaziAranzmane = new javax.swing.JButton();
        jbtnDodajAranzman = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jtxtRacun = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jmDatoteka = new javax.swing.JMenu();
        jmiPocetna = new javax.swing.JMenuItem();
        jmiPoslovniPartner = new javax.swing.JMenuItem();
        jmiKlijenti = new javax.swing.JMenuItem();
        jmiAranzmani = new javax.swing.JMenuItem();
        jmUnos = new javax.swing.JMenu();
        jmiUnosKlijenta = new javax.swing.JMenuItem();
        jmiUnosPoslovnogPartnera = new javax.swing.JMenuItem();
        jmiUnosAranzmana = new javax.swing.JMenuItem();
        jmiAgent = new javax.swing.JMenu();
        jmiPrijaviKlijenta = new javax.swing.JMenuItem();
        jmiOdjaviAgenta = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jtblPoslovniPartneri.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jtblPoslovniPartneri);

        jbtnIzmeniPartnera.setText("Izmeni partnera");
        jbtnIzmeniPartnera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnIzmeniPartneraActionPerformed(evt);
            }
        });

        jbtnObrisiPartnera.setText("Obrisi partnera");
        jbtnObrisiPartnera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnObrisiPartneraActionPerformed(evt);
            }
        });

        jbtnDodajPartnera.setText("Dodaj partnera");
        jbtnDodajPartnera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDodajPartneraActionPerformed(evt);
            }
        });

        jLabel2.setText("Izmena - PoslovniPartnerID:");

        jLabel3.setText("PIB");

        jLabel4.setText("Maticni broj");

        jtxtIzmenaMaticni.setText(" ");

        jLabel5.setText("Naziv");

        jLabel6.setText("Tip Poslovnog Partnera");

        jLabel10.setText("Adresa:");

        jLabel11.setText("Mesto");

        jcmbIzmenaPartnerMesto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel12.setText("Ulica");

        jLabel14.setText("Broj");

        jbtnSacuvajIzmene.setText("Sacuvaj izmene");
        jbtnSacuvajIzmene.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSacuvajIzmeneActionPerformed(evt);
            }
        });

        jLabel13.setText("Naziv poslovnog partnera");

        jLabel15.setText("Tip poslovnog partnera");

        jbtnNadjiPartnere.setText("Nadji partnere");
        jbtnNadjiPartnere.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnNadjiPartnereActionPerformed(evt);
            }
        });

        jbtnPrikaziAranzmane.setText("Prikazi aranzmane");
        jbtnPrikaziAranzmane.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnPrikaziAranzmaneActionPerformed(evt);
            }
        });

        jbtnDodajAranzman.setText("Dodaj aranzman");
        jbtnDodajAranzman.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnDodajAranzmanActionPerformed(evt);
            }
        });

        jLabel1.setText("Ziro racun");

        jmDatoteka.setText("Datoteka");

        jmiPocetna.setText("Pocetna");
        jmiPocetna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiPocetnaActionPerformed(evt);
            }
        });
        jmDatoteka.add(jmiPocetna);

        jmiPoslovniPartner.setText("Poslovni partneri");
        jmDatoteka.add(jmiPoslovniPartner);

        jmiKlijenti.setText("Klijenti");
        jmiKlijenti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiKlijentiActionPerformed(evt);
            }
        });
        jmDatoteka.add(jmiKlijenti);

        jmiAranzmani.setText("Aranzmani");
        jmiAranzmani.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiAranzmaniActionPerformed(evt);
            }
        });
        jmDatoteka.add(jmiAranzmani);

        jMenuBar1.add(jmDatoteka);

        jmUnos.setText("Unos");

        jmiUnosKlijenta.setText("Novi klijent");
        jmiUnosKlijenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiUnosKlijentaActionPerformed(evt);
            }
        });
        jmUnos.add(jmiUnosKlijenta);

        jmiUnosPoslovnogPartnera.setText("Novi poslovni partner");
        jmiUnosPoslovnogPartnera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiUnosPoslovnogPartneraActionPerformed(evt);
            }
        });
        jmUnos.add(jmiUnosPoslovnogPartnera);

        jmiUnosAranzmana.setText("Novi aranzman");
        jmiUnosAranzmana.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiUnosAranzmanaActionPerformed(evt);
            }
        });
        jmUnos.add(jmiUnosAranzmana);

        jMenuBar1.add(jmUnos);

        jmiAgent.setText("Agent");

        jmiPrijaviKlijenta.setText("Prijavi se");
        jmiPrijaviKlijenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiPrijaviKlijentaActionPerformed(evt);
            }
        });
        jmiAgent.add(jmiPrijaviKlijenta);

        jmiOdjaviAgenta.setText("Odjavi se");
        jmiAgent.add(jmiOdjaviAgenta);

        jMenuBar1.add(jmiAgent);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jtxtPretragaNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jtxtPretragaTip))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jbtnIzmeniPartnera, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jbtnObrisiPartnera)
                                    .addComponent(jbtnDodajPartnera)
                                    .addComponent(jbtnNadjiPartnere, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jbtnPrikaziAranzmane)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbtnDodajAranzman)))
                        .addGap(0, 38, Short.MAX_VALUE))
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtxtIzmenaPartnerID, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jtxtIzmenaNaziv, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtxtIzmenaMaticni, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                                    .addComponent(jtxtIzmenaPIB, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtxtIzmenaTip))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel14)
                                        .addComponent(jLabel12))))
                            .addComponent(jLabel10))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jcmbIzmenaPartnerMesto, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jtxtIzmenaUlica, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtxtIzmenaAdresaBroj, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jtxtRacun, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbtnSacuvajIzmene)
                        .addGap(81, 81, 81)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtPretragaNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtxtPretragaTip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnNadjiPartnere))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbtnIzmeniPartnera)
                        .addGap(18, 18, 18)
                        .addComponent(jbtnObrisiPartnera)
                        .addGap(18, 18, 18)
                        .addComponent(jbtnDodajPartnera)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnPrikaziAranzmane)
                    .addComponent(jbtnDodajAranzman))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(jcmbIzmenaPartnerMesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jtxtIzmenaUlica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtxtIzmenaAdresaBroj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jtxtIzmenaPartnerID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jtxtIzmenaPIB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jtxtIzmenaMaticni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jtxtIzmenaNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jtxtIzmenaTip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jtxtRacun, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(jbtnSacuvajIzmene))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jmiKlijentiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiKlijentiActionPerformed
        GUIKontroler.invokeKlijentForm();
        this.setVisible(false);
    }//GEN-LAST:event_jmiKlijentiActionPerformed

    private void jmiAranzmaniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiAranzmaniActionPerformed
        PartnerTableModel ptm = (PartnerTableModel) jtblPoslovniPartneri.getModel();
        pp = ptm.getListapartnera().get(jtblPoslovniPartneri.getSelectedRow());
        GUIKontroler.invokeAranzmanForm(pp);
        this.setVisible(false);
    }//GEN-LAST:event_jmiAranzmaniActionPerformed

    private void jmiPocetnaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiPocetnaActionPerformed
        GUIKontroler.invokeMainForm();
        this.setVisible(false);
    }//GEN-LAST:event_jmiPocetnaActionPerformed

    private void jmiUnosKlijentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiUnosKlijentaActionPerformed
        
    }//GEN-LAST:event_jmiUnosKlijentaActionPerformed

    private void jmiUnosPoslovnogPartneraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiUnosPoslovnogPartneraActionPerformed
    }//GEN-LAST:event_jmiUnosPoslovnogPartneraActionPerformed

    private void jmiUnosAranzmanaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiUnosAranzmanaActionPerformed
    }//GEN-LAST:event_jmiUnosAranzmanaActionPerformed

    private void jmiPrijaviKlijentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiPrijaviKlijentaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jmiPrijaviKlijentaActionPerformed

    private void jbtnDodajPartneraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDodajPartneraActionPerformed
        DodajPartneraPanel dpp = new DodajPartneraPanel();
        JDialog dialog = new JDialog(this, "Unos partnera", true);
        dialog.setLayout(new BorderLayout());
        dialog.add(dpp, BorderLayout.CENTER);
        dialog.pack();
        dialog.setVisible(true);
    }//GEN-LAST:event_jbtnDodajPartneraActionPerformed

    private void jbtnIzmeniPartneraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnIzmeniPartneraActionPerformed
        if (jtblPoslovniPartneri.getSelectedRow()==-1) {
            JOptionPane.showMessageDialog(this, "Morate selektovati partnera");
            return;
        }
        enableIzmeni(true);
       
        PartnerTableModel ptm = (PartnerTableModel) jtblPoslovniPartneri.getModel();
        
        pp = ptm.getListapartnera().get(jtblPoslovniPartneri.getSelectedRow());
        jtxtIzmenaAdresaBroj.setText(pp.getBroj());
        jtxtIzmenaUlica.setText(pp.getUlica());
        jtxtRacun.setText(pp.getZiroRacun());
        jtxtIzmenaMaticni.setText(pp.getMaticniBroj().toString());
        jtxtIzmenaNaziv.setText(pp.getNaziv());
        jtxtIzmenaPIB.setText(pp.getPib().toString());
        jtxtIzmenaPartnerID.setText(pp.getPoslovniPartnerID().toString());
        jtxtIzmenaTip.setText(pp.getTipPoslovnogPartnera().toString());
    }//GEN-LAST:event_jbtnIzmeniPartneraActionPerformed

    private void jbtnNadjiPartnereActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnNadjiPartnereActionPerformed
        try {
            if (jtxtPretragaNaziv.getText().isEmpty() && jtxtPretragaTip.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Morate uneti barem jedan kriterijum pretrage");
            }
            
            String pretraga = jtxtPretragaNaziv.getText()+" "+jtxtPretragaTip.getText();
            KlijentTransfer kt = new KlijentTransfer();
            kt.setOperacija(Konstante.PRETRAZI_PARTNERE);
            kt.setParametar(pretraga);
            Komunikacija.getInstance().sendRequest(kt);
            ServerTransfer st = Komunikacija.getInstance().readResponse();
            List<PoslovniPartner> listanadjenih = (List<PoslovniPartner>) st.getPodaci();
            List<Aranzman> partnerskiAranzmani = new LinkedList<>();
            for (PoslovniPartner nadjen : listanadjenih) {
                partnerskiAranzmani = postaviAranzmane(nadjen);
                
            }
            PartnerTableModel ptm = new PartnerTableModel(listanadjenih);
            jtblPoslovniPartneri.setModel(ptm);
            
        } catch (ClassNotFoundException | IOException ex) {
            Logger.getLogger(KlijentForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtnNadjiPartnereActionPerformed

    private void jbtnObrisiPartneraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnObrisiPartneraActionPerformed
        try {
            
            PartnerTableModel ptm = (PartnerTableModel) jtblPoslovniPartneri.getModel();
            if (jtblPoslovniPartneri.getSelectedRow()==-1) {
                JOptionPane.showMessageDialog(this, "Morate selektovati partnera!");
                return;
            }
            
            KlijentTransfer kt = new KlijentTransfer();
            kt.setOperacija(Konstante.OBRISI_PARTNERA);
            pp = ptm.getListapartnera().get(jtblPoslovniPartneri.getSelectedRow());
            System.out.println(pp.toString());
            kt.setParametar(pp);
            Komunikacija.getInstance().sendRequest(kt);
            ServerTransfer st = Komunikacija.getInstance().readResponse();
            if (st.getUspesnost()==Konstante.USPEH) {
                JOptionPane.showMessageDialog(this, "Partner uspesno obrisan");
                ptm.getListapartnera().remove(pp);
                ptm.fireTableDataChanged();
            }
        } catch (ClassNotFoundException | IOException ex) {
            Logger.getLogger(KlijentForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtnObrisiPartneraActionPerformed

    private void jbtnSacuvajIzmeneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSacuvajIzmeneActionPerformed
        
            pp.setBroj(jtxtIzmenaAdresaBroj.getText());
            pp.setMaticniBroj(Integer.parseInt(jtxtIzmenaMaticni.getText()));
            if (jcmbIzmenaPartnerMesto.getSelectedIndex()!=-1) {
                
                pp.setMesto((Mesto)jcmbIzmenaPartnerMesto.getSelectedItem());
            }
            pp.setNaziv(jtxtIzmenaNaziv.getText());
            pp.setPib(Integer.parseInt(jtxtIzmenaPIB.getText()));
            pp.setTipPoslovnogPartnera(Integer.parseInt(jtxtIzmenaTip.getText()));
            pp.setUlica(jtxtIzmenaUlica.getText());
            pp.setZiroRacun(jtxtRacun.getText());
          try {  
            KlijentTransfer kt = new KlijentTransfer();
            kt.setOperacija(Konstante.IZMENI_PARTNERA);
            kt.setParametar(pp);
            Komunikacija.getInstance().sendRequest(kt);
            ServerTransfer st= Komunikacija.getInstance().readResponse();
            if (st.getUspesnost()==Konstante.USPEH) {
                JOptionPane.showMessageDialog(this, "Partner "+pp.getPoslovniPartnerID()+" uspesno izmenjen!");
                return;
            }else{
                JOptionPane.showMessageDialog(this, "Greska pri menjanju");
            }
        } catch (ClassNotFoundException | IOException ex) {
            Logger.getLogger(PartnerFrm.class.getName()).log(Level.SEVERE, null, ex);
        }catch(NumberFormatException exi){
            JOptionPane.showMessageDialog(this, "Greska pri menjanju");
        }
    }//GEN-LAST:event_jbtnSacuvajIzmeneActionPerformed

    private void jbtnPrikaziAranzmaneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnPrikaziAranzmaneActionPerformed
        PartnerTableModel ptm = (PartnerTableModel) jtblPoslovniPartneri.getModel();
            if (jtblPoslovniPartneri.getSelectedRow()==-1) {
                JOptionPane.showMessageDialog(this, "Morate selektovati partnera!");
                return;
            }
        pp = ptm.getListapartnera().get(jtblPoslovniPartneri.getSelectedRow());
        AranzmanFrm frm = new AranzmanFrm(pp);
        frm.setVisible(true);
    }//GEN-LAST:event_jbtnPrikaziAranzmaneActionPerformed

    private void jbtnDodajAranzmanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnDodajAranzmanActionPerformed
        PartnerTableModel ptm = (PartnerTableModel) jtblPoslovniPartneri.getModel();
            if (jtblPoslovniPartneri.getSelectedRow()==-1) {
                JOptionPane.showMessageDialog(this, "Morate selektovati partnera!");
                return;
            }
        pp = ptm.getListapartnera().get(jtblPoslovniPartneri.getSelectedRow());
        DodajAranzmanPanel dap = new DodajAranzmanPanel(pp);
        JDialog dialog = new JDialog(this, "Unos aranzman", true);
        dialog.setLayout(new BorderLayout());
        dialog.add(dap, BorderLayout.CENTER);
        dialog.pack();
        dialog.setVisible(true);
    }//GEN-LAST:event_jbtnDodajAranzmanActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            Agent ulogovan = (Agent) Sesija.vratiInstancu().getMapa().get("agent");
            System.out.print("Ovog hocu da obrisem: "+ulogovan.toString());
            
            Kontroler.getInstance().izlogujSe(ulogovan);
            Sesija.vratiInstancu().getMapa().remove("agent", ulogovan);
            
            this.setVisible(false);
            this.dispose();
            
            LoginForma lf = new LoginForma();
            lf.setVisible(true);
        } catch (Exception ex) {
            Logger.getLogger(GlavnaForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowClosing


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton jbtnDodajAranzman;
    private javax.swing.JButton jbtnDodajPartnera;
    private javax.swing.JButton jbtnIzmeniPartnera;
    private javax.swing.JButton jbtnNadjiPartnere;
    private javax.swing.JButton jbtnObrisiPartnera;
    private javax.swing.JButton jbtnPrikaziAranzmane;
    private javax.swing.JButton jbtnSacuvajIzmene;
    private javax.swing.JComboBox jcmbIzmenaPartnerMesto;
    private javax.swing.JMenu jmDatoteka;
    private javax.swing.JMenu jmUnos;
    private javax.swing.JMenu jmiAgent;
    private javax.swing.JMenuItem jmiAranzmani;
    private javax.swing.JMenuItem jmiKlijenti;
    private javax.swing.JMenuItem jmiOdjaviAgenta;
    private javax.swing.JMenuItem jmiPocetna;
    private javax.swing.JMenuItem jmiPoslovniPartner;
    private javax.swing.JMenuItem jmiPrijaviKlijenta;
    private javax.swing.JMenuItem jmiUnosAranzmana;
    private javax.swing.JMenuItem jmiUnosKlijenta;
    private javax.swing.JMenuItem jmiUnosPoslovnogPartnera;
    private javax.swing.JTable jtblPoslovniPartneri;
    private javax.swing.JTextField jtxtIzmenaAdresaBroj;
    private javax.swing.JTextField jtxtIzmenaMaticni;
    private javax.swing.JTextField jtxtIzmenaNaziv;
    private javax.swing.JTextField jtxtIzmenaPIB;
    private javax.swing.JTextField jtxtIzmenaPartnerID;
    private javax.swing.JTextField jtxtIzmenaTip;
    private javax.swing.JTextField jtxtIzmenaUlica;
    private javax.swing.JTextField jtxtPretragaNaziv;
    private javax.swing.JTextField jtxtPretragaTip;
    private javax.swing.JTextField jtxtRacun;
    // End of variables declaration//GEN-END:variables

    private void srediFormu() {
        enableIzmeni(false);
        srediComboMesto();
        List<PoslovniPartner> listapp = vratiListuPP();
        PartnerTableModel ptm = new PartnerTableModel(listapp);
        jtblPoslovniPartneri.setModel(ptm);
        
    }
    
    private void enableIzmeni(boolean izmeni){
            
            jtxtIzmenaAdresaBroj.setEditable(izmeni);
            jtxtRacun.setEditable(izmeni);
            jtxtIzmenaMaticni.setEditable(izmeni);
            jtxtIzmenaNaziv.setEditable(izmeni);
            jtxtIzmenaPIB.setEditable(izmeni);
            jtxtIzmenaPartnerID.setEditable(false);
            jtxtIzmenaTip.setEditable(izmeni);
            jcmbIzmenaPartnerMesto.setEnabled(izmeni);
            jbtnSacuvajIzmene.setEnabled(izmeni);
            
        
    }
    private List<PoslovniPartner> vratiListuPP(){
        try {
            KlijentTransfer kt = new KlijentTransfer();
            kt.setOperacija(Konstante.VRATI_PARTNERE);
            Komunikacija.getInstance().sendRequest(kt);
            ServerTransfer st = Komunikacija.getInstance().readResponse();
            if (st.getUspesnost()==Konstante.USPEH) {
                List<PoslovniPartner> lista = (List<PoslovniPartner>) st.getPodaci();   
                return lista;
            }
        } catch (ClassNotFoundException | IOException ex) {
            Logger.getLogger(PartnerFrm.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
        
    }

    private void srediComboMesto() {
        jcmbIzmenaPartnerMesto.removeAllItems();
        List<Mesto> mesta = vratiMesta();
        for (Mesto m : mesta) {
            jcmbIzmenaPartnerMesto.addItem(m);
        }
        jcmbIzmenaPartnerMesto.setSelectedItem(-1);
    }

    private List<Mesto> vratiMesta() {
        try {
            KlijentTransfer kt = new KlijentTransfer();
            kt.setOperacija(Konstante.VRATI_MESTA);
            Komunikacija.getInstance().sendRequest(kt);
            ServerTransfer st = Komunikacija.getInstance().readResponse();
            List<Mesto> lista = (List<Mesto>) st.getPodaci();
            return lista;
        } catch (ClassNotFoundException | IOException ex) {
            Logger.getLogger(PartnerFrm.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }

    private List<Aranzman> postaviAranzmane(PoslovniPartner nadjen) {
         List<Aranzman> arlista = new LinkedList<>();
        try {
            KlijentTransfer kt = new KlijentTransfer();
            kt.setOperacija(Konstante.VRATI_PARTNERSKE_ARANZMANE);
            kt.setParametar(nadjen);
            Komunikacija.getInstance().sendRequest(kt);
            ServerTransfer st = Komunikacija.getInstance().readResponse();
            arlista = (List<Aranzman>) st.getPodaci();
            
        } catch (ClassNotFoundException | IOException ex) {
            Logger.getLogger(KlijentForma.class.getName()).log(Level.SEVERE, null, ex);
        }
        return arlista;
    }

   
}
